# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

[*]
trim_trailing_whitespace = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# this. and Me. preferences
dotnet_style_qualification_for_event = false:error
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_property = false:error

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = false:error
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:error
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true:error
dotnet_style_prefer_conditional_expression_over_return = true:error
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = false:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true:error

# Parameter preferences
dotnet_code_quality_unused_parameters = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:error
csharp_style_var_for_built_in_types = false:error
csharp_style_var_when_type_is_apparent = true:error

# Expression-bodied members
csharp_style_expression_bodied_accessors = false:error
csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_indexers = true:error
csharp_style_expression_bodied_lambdas = true:error
csharp_style_expression_bodied_local_functions = false:error
csharp_style_expression_bodied_methods = false:error
csharp_style_expression_bodied_operators = true:error
csharp_style_expression_bodied_properties = true:error

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = false:error
csharp_style_pattern_matching_over_is_with_cast_check = false:error
csharp_style_prefer_not_pattern = false:error
csharp_style_prefer_pattern_matching = false:error
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = false:error
csharp_preferred_modifier_order = public, private, protected, internal, new, abstract, virtual, sealed, override, static, readonly, extern, unsafe, volatile, async:error

# Code-block preferences
csharp_prefer_braces = true:error
csharp_prefer_simple_using_statement = true:error

# Expression-level preferences
csharp_prefer_simple_default_expression = false:error
csharp_style_deconstructed_variable_declaration = false:error
csharp_style_implicit_object_creation_when_type_is_apparent = false:error
csharp_style_inlined_variable_declaration = false:error
csharp_style_pattern_local_over_anonymous_function = false:error
csharp_style_prefer_index_operator = false:error
csharp_style_prefer_range_operator = false:error
csharp_style_throw_expression = false:error
csharp_style_unused_value_assignment_preference = discard_variable:none
csharp_style_unused_value_expression_statement_preference = discard_variable:none

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:error

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = false
csharp_new_line_before_else = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = none
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = false
csharp_indent_case_contents_when_block = false
csharp_indent_labels = no_change
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false
csharp_wrap_parameters_style = chop_if_long
csharp_wrap_multiple_type_parameter_constraints_style = chop_if_long
csharp_wrap_extends_list_style = chop_if_long
csharp_wrap_enum_declaration = chop_if_long
csharp_wrap_enum_declaration = chop_if_long
csharp_wrap_for_stmt_header_style = chop_if_long
csharp_wrap_multiple_declaration_style = chop_if_long
csharp_wrap_switch_expression = chop_if_long
csharp_wrap_property_pattern = chop_if_long
csharp_wrap_object_and_collection_initializer_style = chop_if_long
csharp_wrap_array_initializer_style = chop_if_long
csharp_wrap_arguments_style = chop_if_long
csharp_wrap_chained_method_calls = chop_if_long
csharp_wrap_chained_binary_expressions = chop_if_long
csharp_wrap_chained_binary_patterns = chop_if_long
csharp_wrap_ternary_expr_style = chop_if_long
csharp_wrap_linq_expressions = chop_if_long
csharp_wrap_verbatim_interpolated_strings = chop_if_long

#### Naming styles ####

# Naming rules
# Defining the 'public_symbols' symbol group
dotnet_naming_symbols.public_symbols.applicable_kinds           = property,method,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public
dotnet_naming_symbols.public_symbols.required_modifiers         = readonly

dotnet_naming_style.first_word_upper_case_style.capitalization = pascal_case

dotnet_naming_rule.public_members_must_be_capitalized.symbols  = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style = pascal_case
dotnet_naming_rule.public_members_must_be_capitalized.severity = error

# Defining the 'private_fields' symbol group
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_style.underscored.capitalization = camal_case
dotnet_naming_style.underscored.required_prefix = _

dotnet_naming_rule.private_fields_underscored.symbols = private_fields
dotnet_naming_rule.private_fields_underscored.style = underscored
dotnet_naming_rule.private_fields_underscored.severity = error

dotnet_naming_rule.private_static_fields_none.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_none.style = underscored
dotnet_naming_rule.private_static_fields_none.severity = none

dotnet_naming_rule.private_static_fields_none.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_none.style = underscored
dotnet_naming_rule.private_static_fields_none.severity = none

dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.non_field_members_should_be_camel_case.severity = error
dotnet_naming_rule.non_field_members_should_be_camel_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_camel_case.style = camel_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers =

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.underscore.required_prefix = _
dotnet_naming_style.underscore.required_suffix =
dotnet_naming_style.underscore.word_separator =
dotnet_naming_style.underscore.capitalization = camel_case

# General Formatting
dotnet_diagnostic.IDE0055.severity = none        # All formatting options have rule ID IDE0055 and title Fix formatting.
dotnet_diagnostic.CA1848.severity = silent       # Use the LoggerMessage delegates

# IDE1006: Naming Styles
dotnet_diagnostic.ide1006.severity = error

# IDE0160: Convert to file-scoped namespace
csharp_style_namespace_declarations = file_scoped:error

# Microsoft .NET properties
dotnet_naming_rule.event_rule.severity = error
dotnet_naming_rule.event_rule.style = pascal_case
dotnet_naming_rule.event_rule.symbols = event_symbols
dotnet_naming_rule.interfaces_rule.severity = error
dotnet_naming_rule.interfaces_rule.style = begins_with_i
dotnet_naming_rule.interfaces_rule.symbols = interfaces_symbols
dotnet_naming_rule.method_rule.severity = error
dotnet_naming_rule.method_rule.style = pascal_case
dotnet_naming_rule.method_rule.symbols = method_symbols
dotnet_naming_rule.private_constants_rule.severity = error
dotnet_naming_rule.private_constants_rule.style = underscore
dotnet_naming_rule.private_constants_rule.symbols = private_constants_symbols
dotnet_naming_rule.private_static_fields_rule.severity = error
dotnet_naming_rule.private_static_fields_rule.style = underscore
dotnet_naming_rule.private_static_fields_rule.symbols = private_static_fields_symbols
dotnet_naming_rule.private_static_readonly_rule.severity = error
dotnet_naming_rule.private_static_readonly_rule.style = underscore
dotnet_naming_rule.private_static_readonly_rule.symbols = private_static_readonly_symbols
dotnet_naming_rule.property_rule.severity = error
dotnet_naming_rule.property_rule.style = pascal_case
dotnet_naming_rule.property_rule.symbols = property_symbols
dotnet_naming_rule.types_and_namespaces_rule.severity = error
dotnet_naming_rule.types_and_namespaces_rule.style = pascal_case
dotnet_naming_rule.types_and_namespaces_rule.symbols = types_and_namespaces_symbols
dotnet_naming_symbols.event_symbols.applicable_accessibilities = *
dotnet_naming_symbols.event_symbols.applicable_kinds = event
dotnet_naming_symbols.interfaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface
dotnet_naming_symbols.method_symbols.applicable_accessibilities = *
dotnet_naming_symbols.method_symbols.applicable_kinds = method
dotnet_naming_symbols.private_constants_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_constants_symbols.applicable_kinds = field
dotnet_naming_symbols.private_constants_symbols.required_modifiers = const
dotnet_naming_symbols.private_static_fields_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_fields_symbols.required_modifiers = static
dotnet_naming_symbols.private_static_readonly_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_symbols.required_modifiers = static,readonly
dotnet_naming_symbols.property_symbols.applicable_accessibilities = *
dotnet_naming_symbols.property_symbols.applicable_kinds = property
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_kinds = namespace,class,struct,enum,delegate

# ReSharper properties
resharper_align_linq_query = true
resharper_align_multiline_argument = true
resharper_align_multiline_calls_chain = true
resharper_align_multiline_extends_list = true
resharper_align_multiline_for_stmt = true
resharper_align_multline_type_parameter_constrains = true
resharper_align_multline_type_parameter_list = true
resharper_apply_auto_detected_rules = false
resharper_braces_for_for = required
resharper_braces_for_foreach = required
resharper_braces_for_ifelse = required
resharper_braces_for_while = required
resharper_brace_style = end_of_line
resharper_constructor_or_destructor_body = block_body
resharper_csharp_align_multiline_parameter = true
resharper_csharp_align_multiple_declaration = true
resharper_csharp_empty_block_style = together
resharper_csharp_max_line_length = 180
resharper_csharp_naming_rule.event = AaBb
resharper_csharp_naming_rule.interfaces = I + AaBb
resharper_csharp_naming_rule.method = AaBb
resharper_csharp_naming_rule.private_constants = _ + AaBb
resharper_csharp_naming_rule.private_instance_fields = _ + AaBb, v + AaBb
resharper_csharp_naming_rule.private_static_fields = _ + AaBb, v + AaBb
resharper_csharp_naming_rule.private_static_readonly = _ + AaBb, v + AaBb
resharper_csharp_naming_rule.property = AaBb
resharper_csharp_naming_rule.types_and_namespaces = AaBb
resharper_for_built_in_types = use_explicit_type
resharper_indent_switch_labels = true
resharper_keep_existing_declaration_block_arrangement = false
resharper_keep_existing_embedded_block_arrangement = false
resharper_keep_existing_enum_arrangement = false
resharper_max_array_initializer_elements_on_line = 3
resharper_method_or_operator_body = block_body
resharper_new_line_before_catch = false
resharper_new_line_before_else = false
resharper_new_line_before_finally = false
resharper_parentheses_redundancy_style = remove
resharper_place_field_attribute_on_same_line = false
resharper_space_before_type_parameter_constraint_colon = false
resharper_space_within_single_line_array_initializer_braces = true
resharper_use_heuristics_for_body_style = true

# ReSharper inspection severities
resharper_arguments_style_literal_highlighting = none
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_async_converter_configure_await_highlighting_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_check_namespace_highlighting = error
resharper_convert_if_statement_to_null_coalescing_expression_highlighting = none
resharper_convert_to_auto_property_highlighting = none
resharper_convert_to_constant_local_highlighting = none
resharper_convert_to_local_function_highlighting = none
resharper_explicit_caller_info_argument_highlighting = none
resharper_inline_out_variable_declaration_highlighting = none
resharper_introduce_optional_parameters_local_highlighting = none
resharper_join_declaration_and_initializer_js_highlighting = none
resharper_merge_conditional_expression_highlighting = none
resharper_missing_has_own_property_in_foreach_highlighting = hint
resharper_private_field_can_be_converted_to_local_variable_highlighting = hint
resharper_redundant_base_qualifier_highlighting = error
resharper_string_compare_to_is_culture_specific_highlighting = none
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_unknown_css_class_highlighting = none
resharper_unused_locals_highlighting = none
resharper_usage_of_possibly_unassigned_value_highlighting = none
resharper_use_null_propagation_highlighting = none
resharper_use_pattern_matching_highlighting = none
resharper_use_string_interpolation_highlighting = none
resharper_virtual_member_call_in_constructor_highlighting = hint

# Analyzers - Performance
dotnet_diagnostic.CA1852.severity = none

# Analyzers - Reliability
dotnet_diagnostic.CA2007.severity = none

# Analyzers - Design
dotnet_diagnostic.CA1055.severity = none
dotnet_diagnostic.CA1056.severity = none

# Analyzers - Naming
dotnet_diagnostic.CA1707.severity = none

# Analyzers - Style
dotnet_diagnostic.IDE0003.severity = error
dotnet_analyzer_diagnostic.category-Style.severity = error

# Analyzers - NUnit
dotnet_diagnostic.NUnit2005.severity = error
csharp_style_prefer_method_group_conversion = true:error
csharp_style_prefer_top_level_statements = true:error
[*.{cs}]
dotnet_style_coalesce_expression = true:error
dotnet_style_null_propagation = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_auto_properties = true:error
dotnet_style_object_initializer = true:error
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_collection_initializer = true:error

#### Custom Analyzers Options ####

# AspNetCoreAnalyzers
dotnet_diagnostic.ASP013.severity = none # Name the controller to match the route.

# FluentAssertions.Analyzers
dotnet_diagnostic.FluentAssertions0801.severity = error   # Code Smell
dotnet_diagnostic.FAA0001.severity = suggestion           # Simplify Assertion
dotnet_diagnostic.FAA0004.severity = error                # Replace NUnit assertion with Fluent Assertions equivalent

# IDisposableAnalyzers
dotnet_diagnostic.IDISP004.severity = none # Don't ignore created IDisposable.
dotnet_diagnostic.IDISP007.severity = none # Don't dispose disposables you do not own.
dotnet_diagnostic.IDISP012.severity = none # Property should not return created disposable.

# Microsoft.VisualStudio.Threading.Analyzers
dotnet_diagnostic.VSTHRD003.severity = none # VSTHRD003: Avoid awaiting foreign Tasks; Way too many false positives

# NSubstitute.Analyzers.CSharp

# NUnit.Analyzers
dotnet_diagnostic.NUnit2005.severity = suggestion # Consider using Assert.That(actual, Is.EqualTo(expected)) instead of Assert.AreEqual(expected, actual)

# ReflectionAnalyzers